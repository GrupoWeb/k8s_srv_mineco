apiVersion: v1
kind: PersistentVolume
metadata:
  name: mineco-pv
  labels:
    mysql: ready
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mysql"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mineco-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  selector:
    matchLabels:
      mysql: ready
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: "root"
        volumeMounts:
          - mountPath: "/var/lib/mysql"
            name: vol-mysql
      volumes:
        - name: vol-mysql
          persistentVolumeClaim:
            claimName: mineco-pvc

        
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  type: ClusterIP
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rules-mineco-101
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /documentos
        backend:
          serviceName: comercio
          servicePort: 8080